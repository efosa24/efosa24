import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load your data
df = pd.read_csv("your_data.csv")  # replace with your file

# Assume 'Issue Age' is in days
bins = range(0, df['Issue Age'].max() + 10, 10)
df['Issue Age Bin'] = pd.cut(df['Issue Age'], bins)

# Count number of complaints per age bin
issue_age_counts = df['Issue Age Bin'].value_counts().sort_index()

# Plot
plt.figure(figsize=(10,6))
sns.barplot(x=issue_age_counts.index.astype(str), y=issue_age_counts.values)
plt.xticks(rotation=45)
plt.title("Complaint Closure Distribution by Issue Age (10-day bins)")
plt.xlabel("Issue Age Range (days)")
plt.ylabel("Number of Complaints")
plt.tight_layout()
plt.show()
#############################
# Ensure dates are in datetime format
df['Awareness Date'] = pd.to_datetime(df['Awareness Date'])
df['Date Created in PQMS'] = pd.to_datetime(df['Date Created in PQMS'])

# Calculate difference
df['Awareness Gap (days)'] = (df['Date Created in PQMS'] - df['Awareness Date']).dt.days

# Bucket into 10-day intervals
bins = range(df['Awareness Gap (days)'].min(), df['Awareness Gap (days)'].max() + 10, 10)
df['Gap Bin'] = pd.cut(df['Awareness Gap (days)'], bins)

# Count
gap_counts = df['Gap Bin'].value_counts().sort_index()

# Plot
plt.figure(figsize=(10,6))
sns.barplot(x=gap_counts.index.astype(str), y=gap_counts.values)
plt.xticks(rotation=45)
plt.title("Awareness to PQMS Entry Gap (10-day bins)")
plt.xlabel("Gap Range (days)")
plt.ylabel("Number of Complaints")
plt.tight_layout()
plt.show()
