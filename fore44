import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
df = pd.read_csv("your_data.csv")

# Define age bins
bins = range(0, df['Issue Age'].max() + 10, 10)
df['Issue Age Bin'] = pd.cut(df['Issue Age'], bins)
issue_age_counts = df['Issue Age Bin'].value_counts().sort_index()

# Set style
sns.set(style="whitegrid")
plt.figure(figsize=(12, 6))
bars = sns.barplot(
    y=issue_age_counts.index.astype(str), 
    x=issue_age_counts.values, 
    palette="viridis"
)

# Annotate bars
for i, v in enumerate(issue_age_counts.values):
    bars.text(v + 1, i, str(v), color='black', va='center', fontsize=10)

# Format
plt.title("Complaint Closure by Issue Age (Grouped in 10-Day Intervals)", fontsize=16, weight='bold')
plt.xlabel("Number of Complaints", fontsize=12)
plt.ylabel("Issue Age Interval (days)", fontsize=12)
plt.tight_layout()
plt.show()
####################################################################

# Convert date columns
df['Awareness Date'] = pd.to_datetime(df['Awareness Date'])
df['Date Created in PQMS'] = pd.to_datetime(df['Date Created in PQMS'])

# Calculate gap
df['Awareness Gap (days)'] = (df['Date Created in PQMS'] - df['Awareness Date']).dt.days

# Bin into 10-day intervals
bins = range(df['Awareness Gap (days)'].min(), df['Awareness Gap (days)'].max() + 10, 10)
df['Gap Bin'] = pd.cut(df['Awareness Gap (days)'], bins)
gap_counts = df['Gap Bin'].value_counts().sort_index()

# Plot
plt.figure(figsize=(12, 6))
bars = sns.barplot(
    y=gap_counts.index.astype(str), 
    x=gap_counts.values, 
    palette="magma"
)

# Annotate bars
for i, v in enumerate(gap_counts.values):
    bars.text(v + 1, i, str(v), color='black', va='center', fontsize=10)

# Format
plt.title("Awareness to PQMS Entry Gap (Grouped in 10-Day Intervals)", fontsize=16, weight='bold')
plt.xlabel("Number of Complaints", fontsize=12)
plt.ylabel("Gap Interval (days)", fontsize=12)
plt.tight_layout()
plt.show()
