import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from prophet import Prophet
from sklearn.metrics import mean_absolute_error
import matplotlib.dates as mdates

# 1. Generate sample monthly data
np.random.seed(42)
date_range = pd.date_range(start='2020-01-01', periods=60, freq='MS')
data = pd.Series(100 + np.random.normal(0, 5, 60).cumsum(), index=date_range)

# Split data into train and test (last 12 months for test)
train = data[:-12]
test = data[-12:]

# Format function for x-axis
def format_date_axis():
    plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))
    plt.gcf().autofmt_xdate()

# -----------------------------------
# 2. ARIMA MODEL
# -----------------------------------
arima_model = ARIMA(train, order=(1, 1, 1))
arima_result = arima_model.fit()

# Get forecast with confidence intervals
arima_forecast_res = arima_result.get_forecast(steps=12)
arima_pred = arima_forecast_res.predicted_mean
arima_ci = arima_forecast_res.conf_int()

# Evaluate ARIMA
arima_mae = mean_absolute_error(test, arima_pred)
arima_aic = arima_result.aic
arima_residuals = test - arima_pred

# Plot ARIMA forecast with confidence interval
plt.figure(figsize=(12, 5))
plt.plot(train.index, train, label='Training Data', color='black')
plt.plot(test.index, test, label='Actual (Test Data)', color='orange')
plt.plot(test.index, arima_pred, label='ARIMA Forecast', color='green', linestyle='--')
plt.fill_between(test.index, arima_ci.iloc[:, 0], arima_ci.iloc[:, 1], color='green', alpha=0.2, label='Confidence Interval')
plt.title('ARIMA Model Forecast with Confidence Interval')
plt.xlabel('Date')
plt.ylabel('Value')
format_date_axis()
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# ARIMA Error Plot
plt.figure(figsize=(10, 3))
plt.plot(test.index, arima_residuals, marker='o', linestyle='-', color='red')
plt.axhline(0, color='black', linestyle='--')
plt.title("ARIMA Forecast Residuals")
plt.xlabel("Date")
plt.ylabel("Error")
format_date_axis()
plt.grid(True)
plt.tight_layout()
plt.show()

# -----------------------------------
# 3. PROPHET MODEL
# -----------------------------------
df_prophet = pd.DataFrame({'ds': train.index, 'y': train.values})
prophet_model = Prophet()
prophet_model.fit(df_prophet)

future = prophet_model.make_future_dataframe(periods=12, freq='MS')
forecast_prophet = prophet_model.predict(future)

# Extract forecast and CI for test period
prophet_forecast = forecast_prophet.set_index('ds').loc[test.index]
prophet_yhat = prophet_forecast['yhat']
prophet_ci_lower = prophet_forecast['yhat_lower']
prophet_ci_upper = prophet_forecast['yhat_upper']
prophet_mae = mean_absolute_error(test.values, prophet_yhat)
prophet_residuals = test.values - prophet_yhat.values

# Plot Prophet forecast with confidence interval
plt.figure(figsize=(12, 5))
plt.plot(train.index, train, label='Training Data', color='black')
plt.plot(test.index, test, label='Actual (Test Data)', color='orange')
plt.plot(test.index, prophet_yhat, label='Prophet Forecast', color='blue', linestyle=':')
plt.fill_between(test.index, prophet_ci_lower, prophet_ci_upper, color='blue', alpha=0.2, label='Confidence Interval')
plt.title('Prophet Model Forecast with Confidence Interval')
plt.xlabel('Date')
plt.ylabel('Value')
format_date_axis()
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Prophet Error Plot
plt.figure(figsize=(10, 3))
plt.plot(test.index, prophet_residuals, marker='o', linestyle='-', color='purple')
plt.axhline(0, color='black', linestyle='--')
plt.title("Prophet Forecast Residuals")
plt.xlabel("Date")
plt.ylabel("Error")
format_date_axis()
plt.grid(True)
plt.tight_layout()
plt.show()

# -----------------------------------
# 4. MODEL COMPARISON
# -----------------------------------
print(f"\nðŸ“Š Model Evaluation Metrics:\n")
print(f"ARIMA MAE: {arima_mae:.2f}")
print(f"ARIMA AIC: {arima_aic:.2f}")
print(f"Prophet MAE: {prophet_mae:.2f}")

if prophet_mae < arima_mae:
    print("\nâœ… Selected Model: Prophet (lower MAE)")
else:
    print("\nâœ… Selected Model: ARIMA (lower MAE)")
