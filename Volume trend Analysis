import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib.backends.backend_pdf import PdfPages

# Set Seaborn style
sns.set_theme(style="whitegrid")

# Simulate dataset from 2022 to 2024
np.random.seed(42)
dates_extended = pd.date_range(start="2022-01-01", end="2024-12-31", freq='D')
products = ['Product A', 'Product B', 'Product C', 'Product D', 'Product E']
manufacturing_sites = ['Site X', 'Site Y', 'Site Z', 'Site A', 'Site B']

# Generate random complaint data
df_extended = pd.DataFrame({
    'Date Received': np.random.choice(dates_extended, 3000),
    'Product': np.random.choice(products, 3000),
    'Manufacturing Site': np.random.choice(manufacturing_sites, 3000)
})

# Preprocess
df_extended['Date Received'] = pd.to_datetime(df_extended['Date Received'])
df_extended['Month'] = df_extended['Date Received'].dt.to_period('M').dt.to_timestamp()
df_extended['Year'] = df_extended['Date Received'].dt.year
df_extended['Month Name'] = df_extended['Date Received'].dt.month_name()

# Complaint volume by year and month
monthly_trend = df_extended.groupby(['Year', 'Month Name']).size().reset_index(name='Complaint Count')

# Ensure months are ordered
month_order = ['January', 'February', 'March', 'April', 'May', 'June',
               'July', 'August', 'September', 'October', 'November', 'December']
monthly_trend['Month Name'] = pd.Categorical(monthly_trend['Month Name'], categories=month_order, ordered=True)

# Pivot for line chart
monthly_pivot = monthly_trend.pivot(index='Month Name', columns='Year', values='Complaint Count').reset_index()

# Filter March data
march_data = df_extended[df_extended['Date Received'].dt.month == 3]

# Top 5 products in March across all years
top_aggregated_products = (
    march_data.groupby('Product')
    .size()
    .reset_index(name='Total Complaints in March')
    .sort_values(by='Total Complaints in March', ascending=False)
    .head(5)
)

# Top 5 manufacturing sites in March across all years
top_mfg_sites = (
    march_data.groupby('Manufacturing Site')
    .size()
    .reset_index(name='Total Complaints in March')
    .sort_values(by='Total Complaints in March', ascending=False)
    .head(5)
)

# Save all charts to PDF
output_pdf = "final_march_trend_top5_products_mfg.pdf"
with PdfPages(output_pdf) as pdf:
    # Line chart of monthly trend
    plt.figure(figsize=(10, 6))
    for year in monthly_pivot.columns[1:]:
        plt.plot(monthly_pivot['Month Name'], monthly_pivot[year], marker='o', label=str(year))
    plt.title('Monthly Complaint Volume Trend (2022–2024)', fontsize=14)
    plt.xlabel('Month')
    plt.ylabel('Complaint Count')
    plt.xticks(rotation=45)
    plt.legend(title='Year')
    plt.grid(True)
    plt.tight_layout()
    pdf.savefig()
    plt.close()

    # Bar chart: Top 5 products in March
    plt.figure(figsize=(8, 5))
    sns.barplot(data=top_aggregated_products, x='Total Complaints in March', y='Product', palette='Set2')
    plt.title('Top 5 Products Driving March Complaints (2022–2024)', fontsize=14)
    plt.xlabel('Total Complaint Count (March Only)')
    plt.tight_layout()
    pdf.savefig()
    plt.close()

    # Bar chart: Top 5 manufacturing sites in March
    plt.figure(figsize=(8, 5))
    sns.barplot(data=top_mfg_sites, x='Total Complaints in March', y='Manufacturing Site', palette='Set2')
    plt.title('Top 5 Manufacturing Sites for March Complaints (2022–2024)', fontsize=14)
    plt.xlabel('Total Complaint Count (March Only)')
    plt.tight_layout()
    pdf.savefig()
    plt.close()

print(f"PDF saved as: {output_pdf}")
