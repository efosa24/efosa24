# Load Required Libraries
library(dplyr)
library(lubridate)
library(tidyverse)
library(prophet)
library(xgboost)
library(caret)
library(keras)
library(tensorflow)
library(zoo)
library(ggplot2)
library(Metrics)  # For RMSE calculation

# Load dataset
df <- read.csv("jj_complaints.csv", stringsAsFactors = FALSE)

# Convert 'Date' to Date type
df$Date <- mdy_hm(df$Date)  # Adjust for format like "12/30/2024 25:5"

# Ensure 'Region' column is a factor
df$Region <- as.factor(df$Region)

# Aggregate complaints by month and region
df$YearMonth <- floor_date(df$Date, "month")

monthly_complaints <- df %>%
  group_by(YearMonth, Region) %>%
  summarise(Complaint_Volume = n(), .groups = 'drop')

# Fill missing values with 0
data <- monthly_complaints
data[is.na(data)] <- 0

# Forecast for each region separately
regions <- unique(data$Region)
forecast_results <- list()

for (region in regions) {
  cat("Processing region:", region, "\n")
  
  # Filter data for the current region
  region_data <- data %>% filter(Region == region)

  # Create lag features (last 3 months of complaint volume)
  region_data <- region_data %>%
    arrange(YearMonth) %>%
    mutate(Lag_1 = lag(Complaint_Volume, 1),
           Lag_2 = lag(Complaint_Volume, 2),
           Lag_3 = lag(Complaint_Volume, 3))

  # Rolling Averages
  region_data <- region_data %>%
    mutate(Rolling_3 = zoo::rollmean(Complaint_Volume, 3, fill = NA, align = "right"),
           Rolling_6 = zoo::rollmean(Complaint_Volume, 6, fill = NA, align = "right"))

  # Drop first few rows with NaN due to lag features
  region_data <- na.omit(region_data)

  # ðŸ“Œ Train-Test Split
  train_size <- floor(0.8 * nrow(region_data))
  train <- region_data[1:train_size, ]
  test <- region_data[(train_size + 1):nrow(region_data), ]

  # ðŸ“Œ PROPHET Model
  prophet_data <- train %>%
    rename(ds = YearMonth, y = Complaint_Volume)

  m <- prophet()
  m <- add_seasonality(m, name="monthly", period=30.5, fourier.order=5)
  m <- fit.prophet(m, prophet_data)

  future <- make_future_dataframe(m, periods = nrow(test), freq = "month")
  forecast <- predict(m, future)

  # Store Prophet Results
  forecast_results[[region]] <- list(
    actual = test,
    prophet_forecast = forecast
  )

  # ðŸ“Š Plot Prophet Forecast
  ggplot() +
    geom_line(data = train, aes(x = YearMonth, y = Complaint_Volume), color = "blue", size = 1) +
    geom_line(data = test, aes(x = YearMonth, y = Complaint_Volume), color = "red", size = 1) +
    geom_line(data = forecast, aes(x = ds, y = yhat), color = "green", size = 1, linetype = "dashed") +
    labs(title = paste("Prophet Forecast for Region:", region),
         x = "Year-Month", y = "Complaint Volume") +
    theme_minimal()
}

# Print forecast results
print(forecast_results)
