
processed_data1 <- function(data_list){
  data_list$Enterprise <- ifelse(data_list$seriousness %in% c("Adverse Event","AE Level 1", "AE Level 2",
                                                "AE Level 3", "Serious AE"), "Adverse Event",
                          ifelse(data_list$seriousness %in% c("Non-Serious", "Serious", "Lack of Effect", "Priority","Non-Priority"), "PQC",
                                 ifelse(data_list$seriousness == "Preference","Preference", NA)))
  
  
  data_list <- data_list %>%
    filter(!(Enterprise == "Adverse Event" & !reg_class %in% c('MEDICAL DEVICE', 'MEDICAL DEVICE II')))
  return(data_list)
}


data_list <- processed_data1(data_list)


data_list <- data_list[!duplicated(data_list$tracking_no_link), ]



#Write a function to identify open cases and past overdue for 45 days, and 365 days

filter_and_create_pivot <- function(data_list) {
  # Filter data for each region and the required conditions
  Regions <- c("NA", "LATAM", "EMEA", "APAC")
  filtered_data <- lapply(Regions, function(regions) {
    data_list %>%
      filter(region == regions, issue_status == "Open", issue_age > 45)
  })
  names(filtered_data) <- Regions
  
  # Create a workbook
  wb <- createWorkbook()
  
  # Add a worksheet for each region and write the filtered data
  lapply(names(filtered_data), function(regions) {
    addWorksheet(wb, sheetName = regions)
    writeData(wb, sheet = regions, filtered_data[[regions]])
  })
  
  # Combine all filtered data for pivot table
  combined_data <- bind_rows(filtered_data, .id = "regions")
  
  # Create age range column
  combined_data <- combined_data %>%
    mutate(Age_Range = case_when(
      issue_age >= 46 & issue_age <= 75 ~ "46-75 days",
      issue_age >= 76 & issue_age <= 105 ~ "76-105 days",
      issue_age >= 106 & issue_age <= 364 ~ "106-364 days",
      issue_age>= 365 ~ "365+ days"
    )) %>%
    filter(!is.na(Age_Range))
  
  # Create pivot table
  pivot_table <- combined_data %>%
    group_by(regions, Age_Range) %>%
    summarise(Open_Cases = n(), .groups = 'drop') %>%
    pivot_wider(names_from = Age_Range, values_from = Open_Cases, values_fill = 0)
  #Add row sums (Total case per region)
  pivot_table <- pivot_table%>%
    mutate(Total = rowSums(select(., -regions)))
  #Add column sum (Total Case per Age range)
  pivot_table <- bind_rows(pivot_table,
                           pivot_table %>%
                             summarise(across(where(is.numeric), sum),
                                       regions= "Total"))
  
  # Add pivot table to a new worksheet
  addWorksheet(wb, sheetName = "Pivot Table")
  writeData(wb, sheet = "Pivot Table", pivot_table)
  
  
  # Create a bar chart
  bar_chart_data <- combined_data %>%
    group_by(Age_Range, region) %>%
    summarise(Open_Cases = n(), .groups = 'drop')
  
  bar_chart <- ggplot(bar_chart_data, aes(x = Age_Range, y = Open_Cases, fill = region)) +
    geom_bar(stat = "identity", position = "dodge") +
    labs(title = "Number of Cases by Age Range and Region",
         x = "Age Range",
         y = "Number of Open Cases") +
    theme_minimal()
  
  # Save the bar chart as an image
  bar_chart_file <- "bar_chart.png"
  ggsave(bar_chart_file, plot = bar_chart, width = 8, height = 6)
  
  # Add the bar chart to the workbook
  addWorksheet(wb, sheetName = "Bar Chart")
  insertImage(wb, sheet = "Bar Chart", file = bar_chart_file, width = 8, height = 6, startRow = 1, startCol = 1)
  
  
  # Save workbook
  saveWorkbook(wb, "Open_cases_and_pivot.xlsx", overwrite = TRUE)
}
filter_and_create_pivot(data_list)
