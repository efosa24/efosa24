import pandas as pd

# Function to process data and calculate the KPI values
def processed_data_for_kpi(data_list):
    # Filter data for Complaint Aging Overdue (Issue age > 45 and <= 365 and issue_status == "Open")
    complaint_aging_overdue = data_list[(data_list['issue_age'] > 45) & 
                                        (data_list['issue_age'] <= 365) & 
                                        (data_list['issue_status'] == 'Open')]
    
    # Filter data for Complaint Aging (Issue age > 365 and issue_status == "Open")
    complaint_aging = data_list[(data_list['issue_age'] > 365) & 
                                (data_list['issue_status'] == 'Open')]
    
    # Aggregate data to calculate KPI values for each region
    regions = data_list['region'].unique()
    kpi_data = []
    
    for region in regions:
        # Total cases for the region
        total_cases_region = data_list[data_list['region'] == region].shape[0]
        
        # Calculate the proportions for Complaint Aging Overdue
        total_cases_overdue = complaint_aging_overdue[complaint_aging_overdue['region'] == region].shape[0]
        overdue_value = total_cases_overdue / total_cases_region if total_cases_region > 0 else 0
        
        # Calculate the proportions for Complaint Aging
        total_cases_aging = complaint_aging[complaint_aging['region'] == region].shape[0]
        aging_value = total_cases_aging / total_cases_region if total_cases_region > 0 else 0
        
        # Append the KPI results for each region
        kpi_data.append(['Complaint Aging Overdue', region, 'September', overdue_value])
        kpi_data.append(['Complaint Aging', region, 'September', aging_value])
    
    # Convert the KPI data into a DataFrame
    kpi_df = pd.DataFrame(kpi_data, columns=['Name of KPI', 'Region', 'Month', 'Value'])
    
    return kpi_df

# Example usage assuming `data_list` is your DataFrame with columns 'issue_age', 'issue_status', and 'region'
# Replace `data_list` with your actual data source
# kpi_df = processed_data_for_kpi(data_list)

# Uncomment the above line and provide your data in place of `data_list`

# Display the KPI DataFrame
import ace_tools as tools; tools.display_dataframe_to_user(name="KPI Report", dataframe=kpi_df)
