import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime
import plotly.express as px

covid_df= pd.read_csv("C:\\Users\\Festus\\Documents\\DATA JOBS\\covid_19_india.csv")
covid_df.head(10)
covid_df.info()

#Summary statistics
covid_df.describe()
vaccine_df= pd.read_csv("C:\\Users\\Festus\\Documents\\DATA JOBS\\covid_vaccine_statewise.csv")

vaccine_df.head(7)
#Drop some columns with many NA
covid_df.drop(["Sno","Time","ConfirmedIndianNational","ConfirmedForeignNational"], inplace = True, axis = 1)
covid_df.head()

covid_df['Date'] = pd.to_datetime(covid_df['Date'], format = '%m/%d/%Y')
covid_df.head()

##Active cases 
covid_df['Active_Cases'] = covid_df["Confirmed"]- (covid_df['Cured']+covid_df['Deaths'])
covid_df.tail()

##Using the pivot table 
statewise= pd.pivot_table (covid_df, values=["Confirmed", "Deaths","Cured"],index = "State/UnionTerritory",
                          aggfunc= max)
statewise["Recovery Rate"]= statewise["Cured"]*100/statewise["Confirmed"]
statewise["Mortality Rate"]= statewise["Deaths"]*100/statewise["Confirmed"]
statewise = statewise.sort_values(by= "Confirmed", ascending= False)
statewise.style.background_gradient(cmap= "cubehelix")

#Top 10 active cases states 
top_10_active_cases=covid_df.groupby(by= "State/UnionTerritory").max()[["Active_Cases", "Date"]].sort_values(by=["Active_Cases"], ascending=
                                                                                                             False).reset_index()
fig= plt.figure(figsize=(16,9))
plt.title("Top 10 states with most active cases in Indian", size=25)

ax=sns.barplot(data=top_10_active_cases.iloc[:10],y= "Active_Cases", x= "State/UnionTerritory",linewidth =2, edgecolor="red")
top_10_active_cases=covid_df.groupby(by= "State/UnionTerritory").max()[["Active_Cases", "Date"]].sort_values(by=["Active_Cases"], ascending=
 
                                                                                                             False).reset_index()
fig= plt.figure(figsize=(16,9))
plt.title("Top 10 states with most active cases in Indian", size=25)
ax=sns.barplot(data=top_10_active_cases.iloc[:10],y= "Active_Cases", x= "State/UnionTerritory",linewidth =2, edgecolor="red")
plt.xlabel('States')
plt.ylabel('Total Active Cases')
plt.show()

#Top 10 active cases states 
top_10_deaths=covid_df.groupby(by= "State/UnionTerritory").max()[["Deaths", "Date"]].sort_values(by=["Deaths"], ascending=False).reset_index()
                                                                                                   

fig= plt.figure(figsize=(18,5))
plt.title("Top 10 states with most Deaths", size=25)
ax=sns.barplot(data=top_10_deaths.iloc[:12],y= "Deaths", x= "State/UnionTerritory",linewidth =2, edgecolor="red")
plt.xlabel("States")
plt.ylabel("Total Death Cases")
plt.show()

##Growth trend 
fig= plt.figure(figsize=(12,6))
ax = sns.lineplot(data = covid_df[covid_df["State/UnionTerritory"].isin(["Maharashtra", "Karnataka","Kerala","Tamil Nudu", "Uttar Pradesh"])], x="Date", y="Active_Cases", hue = "State/UnionTerritory")
ax.set_title("Top 5 Affected States in India", size=16)
vaccine_df.head()

vaccine_df.rename(columns= {'Updated On': 'Vaccine_Date'}, inplace= True)
vaccine_df.head(10)
vaccine_df.info()

##To find the sum of the missing values
vaccine_df.isnull().sum()

Vaccination= vaccine_df.drop(columns=['Sputnik V (Doses Administered)', 'AEFI','18-44 Years (Doses Administered)','45-60 Years (Doses Administered)','60+ Years (Doses Administered)'], axis=1)

Vaccination.head()
#Male versus Female vaccination
male= Vaccination['Male(Individuals Vaccinated)'].sum()
female= Vaccination['Female(Individuals Vaccinated)'].sum()
px.pie(names=['Male', 'Female'], values=[male,female], title='Male and Female Vaccination')

#Remove rows where state is india
vaccine= vaccine_df[vaccine_df.State!= 'India']
vaccine
vaccine.rename(columns = {'Total Individuals Vaccinated': 'Total'}, inplace=True)
vaccine.head()
##Most vaccinated  State
max_vac= vaccine.groupby('State')['Total'].sum().to_frame('Total')
max_vac= max_vac.sort_values('Total', ascending=True)[:5]
max_vac

fig= plt.figure(figsize=(10,5))
plt.title("Top 5 most vaccinated states in India", size=20)
ax=sns.barplot(data=max_vac.iloc[:10],y= max_vac.Total, x= max_vac.index,linewidth =2, edgecolor="red")
plt.xlabel("States")
plt.ylabel("Vaccination")
plt.show()
##Least vaccinated  State
max_vac= vaccine.groupby('State')['Total'].sum().to_frame('Total')
max_vac= max_vac.sort_values('Total', ascending=True)[:5]
max_vac

fig= plt.figure(figsize=(12,5))
plt.title("Top 5 most vaccinated states in India", size=25)
ax=sns.barplot(data=max_vac.iloc[:10],y= max_vac.Total, x= max_vac.index,linewidth =2, edgecolor="red")
plt.xlabel("States")
plt.ylabel("Vaccination")
plt.show()